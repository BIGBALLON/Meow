{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BG's Cheat Sheets This project was powered by MkDocs , a fast, simple and downright gorgeous static site generator that's geared towards building project documentation.","title":"BG's Cheat Sheets"},{"location":"#bgs-cheat-sheets","text":"This project was powered by MkDocs , a fast, simple and downright gorgeous static site generator that's geared towards building project documentation.","title":"BG's Cheat Sheets"},{"location":"bash/","text":"Bash Basic","title":"Bash Basic"},{"location":"bash/#bash-basic","text":"","title":"Bash Basic"},{"location":"dl_tools/","text":"Deep Learning Tools CUDA Installation Official doc: nvidia-cuda Previous note: PyTorch-install.md PS: To install the Display Driver, the Nouveau drivers must first be disabled. Each distribution of Linux has a different method for disabling Nouveau. The Nouveau drivers are loaded if the following command prints anything: lsmod | grep nouveau cuDNN Installation Official doc: nvidia-deeplearning Previous note: PyTorch-install.md # 1. Navigate to your <cudnnpath> directory containing the cuDNN Tar file. # 2. Unzip the cuDNN package. tar -xzvf cudnn-x.x-linux-x64-v8.x.x.x.tgz # 3. Copy the following files into the CUDA Toolkit directory, and change the file permissions. sudo cp cuda/include/cudnn.h /usr/local/cuda/include sudo cp cuda/include/cudnn_version.h /usr/local/cuda/include sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64 sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn* Check CUDA version cat /usr/local/cuda/version.txt # CUDA Version 10.2.89 nvcc--version # nvcc: NVIDIA (R) Cuda compiler driver # Copyright (c) 2005-2019 NVIDIA Corporation # Built on Wed_Oct_23_19:24:38_PDT_2019 # Cuda compilation tools, release 10.2, V10.2.89 Check cuDNN version cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2 #define CUDNN_MAJOR 7 #define CUDNN_MINOR 6 #define CUDNN_PATCHLEVEL 5 -- #define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL) #include \"driver_types.h\" Visit Tensorboard via SSH ssh -L 12306:127.0.0.1:12306 account@server.address # see https://zhuanlan.zhihu.com/p/57630633 # and https://stackoverflow.com/questions/38513333/is-it-possible-to-see-tensorboard-over-ssh","title":"Deep Learning Tools"},{"location":"dl_tools/#deep-learning-tools","text":"","title":"Deep Learning Tools"},{"location":"dl_tools/#cuda-installation","text":"Official doc: nvidia-cuda Previous note: PyTorch-install.md PS: To install the Display Driver, the Nouveau drivers must first be disabled. Each distribution of Linux has a different method for disabling Nouveau. The Nouveau drivers are loaded if the following command prints anything: lsmod | grep nouveau","title":"CUDA Installation"},{"location":"dl_tools/#cudnn-installation","text":"Official doc: nvidia-deeplearning Previous note: PyTorch-install.md # 1. Navigate to your <cudnnpath> directory containing the cuDNN Tar file. # 2. Unzip the cuDNN package. tar -xzvf cudnn-x.x-linux-x64-v8.x.x.x.tgz # 3. Copy the following files into the CUDA Toolkit directory, and change the file permissions. sudo cp cuda/include/cudnn.h /usr/local/cuda/include sudo cp cuda/include/cudnn_version.h /usr/local/cuda/include sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64 sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*","title":"cuDNN Installation"},{"location":"dl_tools/#check-cuda-version","text":"cat /usr/local/cuda/version.txt # CUDA Version 10.2.89 nvcc--version # nvcc: NVIDIA (R) Cuda compiler driver # Copyright (c) 2005-2019 NVIDIA Corporation # Built on Wed_Oct_23_19:24:38_PDT_2019 # Cuda compilation tools, release 10.2, V10.2.89","title":"Check CUDA version"},{"location":"dl_tools/#check-cudnn-version","text":"cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2 #define CUDNN_MAJOR 7 #define CUDNN_MINOR 6 #define CUDNN_PATCHLEVEL 5 -- #define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL) #include \"driver_types.h\"","title":"Check cuDNN version"},{"location":"dl_tools/#visit-tensorboard-via-ssh","text":"ssh -L 12306:127.0.0.1:12306 account@server.address # see https://zhuanlan.zhihu.com/p/57630633 # and https://stackoverflow.com/questions/38513333/is-it-possible-to-see-tensorboard-over-ssh","title":"Visit Tensorboard via SSH"},{"location":"git/","text":"Git Basic","title":"Git Basic"},{"location":"git/#git-basic","text":"","title":"Git Basic"},{"location":"linux_basic/","text":"Linux Basic Reference: linuxtools Quick Search uname - print system information lshw - list hardware lscpu - display information about the CPU architecture fdisk - manipulate disk partition table df - report file system disk space usage free - display amount of free and used memory in the system bg, fg, & and Ctrl+Z ps - report a snapshot of the current processes grep, egrep, fgrep, rgrep - print lines matching a pattern diff - compare files line by line find - search for files in a directory hierarchy echo - display a line of text history - GNU History Library kill - send a signal to a process groups - print the groups a user is in chmod - change file mode bits chgrp - change group ownership chown - change file owner and group curl - transfer a URL wget - The non-interactive network downloader top - display Linux processes nl - Number lines of files cat - concatenate files and print on the standard output less - opposite of more wc - print newline, word, and byte counts for each file mv - move (rename) files cp - copy files and directories pwd - print name of current/working directory mkdir - make directories passwd - change user password ping - send ICMP ECHO_REQUEST to network hosts head - output the first part of files tail - output the last part of files uptime - Tell how long the system has been running. date - Print or set the system date and time. whoami - Print effective userid. shutdown - Halt, power-off or reboot the machine w - show who is logged on and what they are doing ssh \u2014 OpenSSH SSH client (remote login program) cal, ncal \u2014 displays a calendar and the date of Easter ctrl + a or home: Go to the beginning of the line. ctrl + e or End: Go to the end of the line. nvidia-smi: NVIDIA System Management Interface program ctrl + xx: Move between the beginning of the line and the current position of the cursor. This allows you to press Ctrl+XX to return to the start of the line, change something, and then press Ctrl+XX to go back to your original cursor position. ctrl + c: Interrupt (kill) the current foreground process running in in the terminal. ctrl + d: Close the bash shell. ctrl + z: Suspend the current foreground process running in bash. ctrl + l: Clear the screen. This is similar to running the \u201cclear\u201d command. ctrl + s: Stop all output to the screen. ctrl + q: Resume output to the screen after stopping it with ctrl + s. ctrl + w: Cut the word before the cursor, adding it to the clipboard. ctrl + k: Cut the part of the line after the cursor, adding it to the clipboard. ctrl + u: Cut the part of the line before the cursor, adding it to the clipboard. ctrl + y: Paste the last thing you cut from the clipboard. The y here stands for \u201cyank\u201d. alt + u: Capitalize every character from the cursor to the end of the current word, converting the characters to upper case. alt + l: Uncapitalize every character from the cursor to the end of the current word, converting the characters to lower case. alt + c: Capitalize the character under the cursor. Your cursor will move to the end of the current word. alt + r: Revert any changes to a command you\u2019ve pulled from your history if you\u2019ve edited it. ctrl + r: Recall the last command matching the characters you provide. Press this shortcut and start typing to search your bash history for a command.","title":"Linux Basic"},{"location":"linux_basic/#linux-basic","text":"Reference: linuxtools","title":"Linux Basic"},{"location":"linux_basic/#quick-search","text":"uname - print system information lshw - list hardware lscpu - display information about the CPU architecture fdisk - manipulate disk partition table df - report file system disk space usage free - display amount of free and used memory in the system bg, fg, & and Ctrl+Z ps - report a snapshot of the current processes grep, egrep, fgrep, rgrep - print lines matching a pattern diff - compare files line by line find - search for files in a directory hierarchy echo - display a line of text history - GNU History Library kill - send a signal to a process groups - print the groups a user is in chmod - change file mode bits chgrp - change group ownership chown - change file owner and group curl - transfer a URL wget - The non-interactive network downloader top - display Linux processes nl - Number lines of files cat - concatenate files and print on the standard output less - opposite of more wc - print newline, word, and byte counts for each file mv - move (rename) files cp - copy files and directories pwd - print name of current/working directory mkdir - make directories passwd - change user password ping - send ICMP ECHO_REQUEST to network hosts head - output the first part of files tail - output the last part of files uptime - Tell how long the system has been running. date - Print or set the system date and time. whoami - Print effective userid. shutdown - Halt, power-off or reboot the machine w - show who is logged on and what they are doing ssh \u2014 OpenSSH SSH client (remote login program) cal, ncal \u2014 displays a calendar and the date of Easter ctrl + a or home: Go to the beginning of the line. ctrl + e or End: Go to the end of the line. nvidia-smi: NVIDIA System Management Interface program ctrl + xx: Move between the beginning of the line and the current position of the cursor. This allows you to press Ctrl+XX to return to the start of the line, change something, and then press Ctrl+XX to go back to your original cursor position. ctrl + c: Interrupt (kill) the current foreground process running in in the terminal. ctrl + d: Close the bash shell. ctrl + z: Suspend the current foreground process running in bash. ctrl + l: Clear the screen. This is similar to running the \u201cclear\u201d command. ctrl + s: Stop all output to the screen. ctrl + q: Resume output to the screen after stopping it with ctrl + s. ctrl + w: Cut the word before the cursor, adding it to the clipboard. ctrl + k: Cut the part of the line after the cursor, adding it to the clipboard. ctrl + u: Cut the part of the line before the cursor, adding it to the clipboard. ctrl + y: Paste the last thing you cut from the clipboard. The y here stands for \u201cyank\u201d. alt + u: Capitalize every character from the cursor to the end of the current word, converting the characters to upper case. alt + l: Uncapitalize every character from the cursor to the end of the current word, converting the characters to lower case. alt + c: Capitalize the character under the cursor. Your cursor will move to the end of the current word. alt + r: Revert any changes to a command you\u2019ve pulled from your history if you\u2019ve edited it. ctrl + r: Recall the last command matching the characters you provide. Press this shortcut and start typing to search your bash history for a command.","title":"Quick Search"},{"location":"linux_tools/","text":"Linux Tools Reference: ubuntu_rc Miniconda Installation cd ~/Downloads # install latest miniconda # see https://docs.conda.io/en/latest/miniconda.html wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda eval \"$(~/miniconda/bin/conda shell.bash hook)\" conda init Zsh Installation # install zsh # see http://www.zsh.org/ sudo apt install zsh -y # install oh-my-zsh # see https://ohmyz.sh/ cd ~ sh -c \"$(wget -O- https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" bash -c \"$(curl -fsSL https://raw.githubusercontent.com/skylerlee/zeta-zsh-theme/master/scripts/install.sh)\" # install plugin for omzsh git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions sed -i 's/(git)/(git extract z zsh-syntax-highlighting zsh-autosuggestions)/' ~/.zshrc tmux Installation # install tmux sudo apt install zsh -y # install oh-my-tmux cd ~ git clone https://github.com/gpakosz/.tmux.git ln -s -f .tmux/.tmux.conf cp .tmux/.tmux.conf.local . vimrc Installation git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime sh ~/.vim_runtime/install_awesome_vimrc.sh","title":"Linux Tools"},{"location":"linux_tools/#linux-tools","text":"Reference: ubuntu_rc","title":"Linux Tools"},{"location":"linux_tools/#miniconda-installation","text":"cd ~/Downloads # install latest miniconda # see https://docs.conda.io/en/latest/miniconda.html wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda eval \"$(~/miniconda/bin/conda shell.bash hook)\" conda init","title":"Miniconda Installation"},{"location":"linux_tools/#zsh-installation","text":"# install zsh # see http://www.zsh.org/ sudo apt install zsh -y # install oh-my-zsh # see https://ohmyz.sh/ cd ~ sh -c \"$(wget -O- https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" bash -c \"$(curl -fsSL https://raw.githubusercontent.com/skylerlee/zeta-zsh-theme/master/scripts/install.sh)\" # install plugin for omzsh git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions sed -i 's/(git)/(git extract z zsh-syntax-highlighting zsh-autosuggestions)/' ~/.zshrc","title":"Zsh Installation"},{"location":"linux_tools/#tmux-installation","text":"# install tmux sudo apt install zsh -y # install oh-my-tmux cd ~ git clone https://github.com/gpakosz/.tmux.git ln -s -f .tmux/.tmux.conf cp .tmux/.tmux.conf.local .","title":"tmux Installation"},{"location":"linux_tools/#vimrc-installation","text":"git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime sh ~/.vim_runtime/install_awesome_vimrc.sh","title":"vimrc Installation"},{"location":"todo/","text":"To Do List AlphaGo DeepMind articles https://deepmind.com/research/case-studies/alphago-the-story-so-far https://deepmind.com/blog/article/alphagos-next-move https://deepmind.com/blog/article/innovations-alphago https://deepmind.com/research/publications/bayesian-optimization-alphago https://deepmind.com/research/open-source/alphazero-resources https://deepmind.com/blog/article/alphago-zero-starting-scratch https://deepmind.com/blog/article/alphazero-shedding-new-light-grand-games-chess-shogi-and-go https://deepmind.com/blog/article/exploring-mysteries-alphago https://deepmind.com/research/publications/mastering-game-go-without-human-knowledge Darkforest & ELF OpenGO Darkforest: https://github.com/facebookresearch/darkforestGo paper: https://arxiv.org/abs/1511.06410 poster: http://yuandong-tian.com/ICLR2016-poster.pdf ELF OpenGO: https://github.com/pytorch/ELF blog: https://ai.facebook.com/blog/open-sourcing-new-elf-opengo-bot-and-go-research/ paper1: http://proceedings.mlr.press/v97/tian19a/tian19a.pdf paper2: https://arxiv.org/pdf/1902.04522.pdf video: https://youtube.videoken.com/embed/Qq5IkeYgTik?tocitem=1 Ke Jie vs AlphaGo 2017\u5e745\u670823\u65e5 - 2017\u5e745\u670827\u65e5 \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a, \u67ef\u6d01\u5bf9\u9635 AlphaGo\uff1a\u7b2c\u4e00\u5c40 https://www.youtube.com/watch?v=5kIQ0F8iN8U \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a, \u67ef\u6d01\u5bf9\u9635 AlphaGo\uff1a\u7b2c\u4e8c\u5c40 https://www.youtube.com/watch?v=0t2KJe06oGs \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a, \u67ef\u6d01\u5bf9\u9635 AlphaGo\uff1a\u7b2c\u4e09\u5c40 https://www.youtube.com/watch?v=hhWJ7ns79zg \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a\uff1aAlphaGo \u914d\u5bf9\u8d5b & \u56e2\u961f\u8d5b https://www.youtube.com/watch?v=g1IRapW3l60 Lee Sedol vs AlphaGo 2016\u5e743\u67088\u65e5 - 2016\u5e743\u670815\u65e5 Match 1 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=vFr3K2DORc8 Match 2 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=l-GsfyVCBu0 Match 3 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=qUAmTYHEyM8 Match 4 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=yCALyQRN3hw Match 5 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=mzpW10DPHeQ Open AI Five https://openai.com/blog/how-to-train-your-openai-five/ https://openai.com/blog/openai-five-finals/ https://openai.com/blog/openai-five/ https://arena.openai.com/#/results https://openai.com/blog/tags/dota-2/ AlphaStar https://deepmind.com/blog/article/alphastar-mastering-real-time-strategy-game-starcraft-ii https://deepmind.com/blog/article/AlphaStar-Grandmaster-level-in-StarCraft-II-using-multi-agent-reinforcement-learning https://deepmind.com/research/open-source/alphastar-resources AlphaFold https://deepmind.com/blog/article/alphafold","title":"To Do List"},{"location":"todo/#to-do-list","text":"","title":"To Do List"},{"location":"todo/#alphago","text":"","title":"AlphaGo"},{"location":"todo/#deepmind-articles","text":"https://deepmind.com/research/case-studies/alphago-the-story-so-far https://deepmind.com/blog/article/alphagos-next-move https://deepmind.com/blog/article/innovations-alphago https://deepmind.com/research/publications/bayesian-optimization-alphago https://deepmind.com/research/open-source/alphazero-resources https://deepmind.com/blog/article/alphago-zero-starting-scratch https://deepmind.com/blog/article/alphazero-shedding-new-light-grand-games-chess-shogi-and-go https://deepmind.com/blog/article/exploring-mysteries-alphago https://deepmind.com/research/publications/mastering-game-go-without-human-knowledge","title":"DeepMind articles"},{"location":"todo/#darkforest-elf-opengo","text":"Darkforest: https://github.com/facebookresearch/darkforestGo paper: https://arxiv.org/abs/1511.06410 poster: http://yuandong-tian.com/ICLR2016-poster.pdf ELF OpenGO: https://github.com/pytorch/ELF blog: https://ai.facebook.com/blog/open-sourcing-new-elf-opengo-bot-and-go-research/ paper1: http://proceedings.mlr.press/v97/tian19a/tian19a.pdf paper2: https://arxiv.org/pdf/1902.04522.pdf video: https://youtube.videoken.com/embed/Qq5IkeYgTik?tocitem=1","title":"Darkforest &amp; ELF OpenGO"},{"location":"todo/#ke-jie-vs-alphago","text":"2017\u5e745\u670823\u65e5 - 2017\u5e745\u670827\u65e5 \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a, \u67ef\u6d01\u5bf9\u9635 AlphaGo\uff1a\u7b2c\u4e00\u5c40 https://www.youtube.com/watch?v=5kIQ0F8iN8U \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a, \u67ef\u6d01\u5bf9\u9635 AlphaGo\uff1a\u7b2c\u4e8c\u5c40 https://www.youtube.com/watch?v=0t2KJe06oGs \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a, \u67ef\u6d01\u5bf9\u9635 AlphaGo\uff1a\u7b2c\u4e09\u5c40 https://www.youtube.com/watch?v=hhWJ7ns79zg \u4e2d\u56fd\u4e4c\u9547\u00b7\u56f4\u68cb\u5cf0\u4f1a\uff1aAlphaGo \u914d\u5bf9\u8d5b & \u56e2\u961f\u8d5b https://www.youtube.com/watch?v=g1IRapW3l60","title":"Ke Jie vs AlphaGo"},{"location":"todo/#lee-sedol-vs-alphago","text":"2016\u5e743\u67088\u65e5 - 2016\u5e743\u670815\u65e5 Match 1 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=vFr3K2DORc8 Match 2 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=l-GsfyVCBu0 Match 3 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=qUAmTYHEyM8 Match 4 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=yCALyQRN3hw Match 5 - Google DeepMind Challenge Match: Lee Sedol vs AlphaGo https://www.youtube.com/watch?v=mzpW10DPHeQ","title":"Lee Sedol vs AlphaGo"},{"location":"todo/#open-ai-five","text":"https://openai.com/blog/how-to-train-your-openai-five/ https://openai.com/blog/openai-five-finals/ https://openai.com/blog/openai-five/ https://arena.openai.com/#/results https://openai.com/blog/tags/dota-2/","title":"Open AI Five"},{"location":"todo/#alphastar","text":"https://deepmind.com/blog/article/alphastar-mastering-real-time-strategy-game-starcraft-ii https://deepmind.com/blog/article/AlphaStar-Grandmaster-level-in-StarCraft-II-using-multi-agent-reinforcement-learning https://deepmind.com/research/open-source/alphastar-resources","title":"AlphaStar"},{"location":"todo/#alphafold","text":"https://deepmind.com/blog/article/alphafold","title":"AlphaFold"}]}